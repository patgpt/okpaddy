// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer2/core'
import * as Local from 'contentlayer2/source-files'

export { isType } from 'contentlayer2/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Post = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Post'
  title: string
  date: IsoDateTimeString
  summary?: string | undefined
  published: boolean
  /** MDX file body */
  body: MDX
  slug: string
  url: string
}

export type Service = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Service'
  title: string
  slug: string
  summary: string
  heroImage?: string | undefined
  heroAlt?: string | undefined
  tagline?: string | undefined
  priority?: number | undefined
  categories?: string[] | undefined
  keywords?: string[] | undefined
  published: boolean
  updated?: IsoDateTimeString | undefined
  personas?: string[] | undefined
  problems?: string[] | undefined
  outcomes?: string[] | undefined
  features?: string[] | undefined
  process?: any[] | undefined
  packages?: any[] | undefined
  testimonials?: any[] | undefined
  faqsRef?: string | undefined
  relatedCaseStudies?: string[] | undefined
  ctaLabel: string
  ctaHref: string
  schemaType: 'ProfessionalService' | 'Game' | 'SoftwareApplication' | 'Service'
  /** MDX file body */
  body: MDX
  url: string
  readingTime: json
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Post | Service
export type DocumentTypeNames = 'Post' | 'Service'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allServices: Service[]
  allPosts: Post[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Post: Post
  Service: Service
}

export type NestedTypeMap = {

}

 